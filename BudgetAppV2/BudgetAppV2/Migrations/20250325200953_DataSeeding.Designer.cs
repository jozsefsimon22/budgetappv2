// <auto-generated />
using System;
using BudgetAppV2.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BudgetAppV2.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250325200953_DataSeeding")]
    partial class DataSeeding
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Shared.Entities.FinancialTransaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<double>("CurrentAmount")
                        .HasColumnType("double precision");

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date");

                    b.Property<bool>("IsRecurring")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<int>("TransactionFrequency")
                        .HasColumnType("integer");

                    b.Property<int>("TransactionType")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("FinancialTransactions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b1501478-fdba-49aa-8599-e23cdd8ad3b1"),
                            CurrentAmount = 15.99,
                            IsRecurring = true,
                            Name = "Netflix Subscription",
                            StartDate = new DateOnly(2023, 1, 1),
                            TransactionFrequency = 1,
                            TransactionType = 1
                        },
                        new
                        {
                            Id = new Guid("c02ee91f-7c3a-42c6-ba14-7a2df4934a3d"),
                            CurrentAmount = 2500.0,
                            IsRecurring = true,
                            Name = "Salary",
                            StartDate = new DateOnly(2022, 6, 15),
                            TransactionFrequency = 1,
                            TransactionType = 0
                        },
                        new
                        {
                            Id = new Guid("6ea81ae4-3bf4-4099-b844-72348a47bb0b"),
                            CurrentAmount = 1200.0,
                            EndDate = new DateOnly(2024, 2, 10),
                            IsRecurring = false,
                            Name = "New Laptop",
                            StartDate = new DateOnly(2024, 2, 10),
                            TransactionFrequency = 3,
                            TransactionType = 1
                        },
                        new
                        {
                            Id = new Guid("e36e7193-fd9d-4b53-929b-46dd90dc7317"),
                            CurrentAmount = 800.0,
                            IsRecurring = false,
                            Name = "Freelance Project",
                            StartDate = new DateOnly(2024, 1, 15),
                            TransactionFrequency = 3,
                            TransactionType = 0
                        },
                        new
                        {
                            Id = new Guid("73489b93-b090-4746-bbcc-b99c729f36ab"),
                            CurrentAmount = 25.0,
                            IsRecurring = true,
                            Name = "Gym Membership",
                            StartDate = new DateOnly(2023, 3, 1),
                            TransactionFrequency = 1,
                            TransactionType = 1
                        },
                        new
                        {
                            Id = new Guid("0993573a-9d10-46d2-887a-5e29b3b32308"),
                            CurrentAmount = 150.0,
                            EndDate = new DateOnly(2024, 5, 20),
                            IsRecurring = false,
                            Name = "Concert Tickets",
                            StartDate = new DateOnly(2024, 5, 20),
                            TransactionFrequency = 3,
                            TransactionType = 1
                        });
                });

            modelBuilder.Entity("Shared.Entities.FinancialTransactionHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<double>("Amount")
                        .HasColumnType("double precision");

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date");

                    b.Property<Guid?>("FinancialTransactionId")
                        .HasColumnType("uuid");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("FinancialTransactionId");

                    b.ToTable("FinancialTransactionHistories");
                });

            modelBuilder.Entity("Shared.Entities.FinancialTransactionHistory", b =>
                {
                    b.HasOne("Shared.Entities.FinancialTransaction", null)
                        .WithMany("History")
                        .HasForeignKey("FinancialTransactionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Shared.Entities.FinancialTransaction", b =>
                {
                    b.Navigation("History");
                });
#pragma warning restore 612, 618
        }
    }
}
