@using Shared.Entities
@using Shared.Enums
@inject DialogService DialogService

<RadzenTemplateForm TItem="FinancialTransactionHistory" Data="@TransactionHistory" Submit="@Submit">

    <div class="p-4" style="display: flex; flex-direction: column; gap: 1rem;">
        <label>Amount</label>
        <RadzenNumeric Label="Amount"
                       @bind-Value="@TransactionHistory.Amount"
                       Style="width: 100%"
                       Min="1"/>

        <!-- Start Date Picker -->
        <div>
            <label>Start Date</label>
            <RadzenDatePicker @bind-Value="TransactionHistory.StartDate"
                              DateFormat="MM/dd/yyyy"
                              Placeholder="Select start date"
                              Min="@MinStartDate"
                              Style="width: 100%;"
                              InitialViewDate="DateTime.Today"/>
            <ValidationMessage For="() => TransactionHistory.StartDate"/>
        </div>

        <!-- End Date Picker -->
        <div>
            <label>End Date (Optional)</label>
            <RadzenDatePicker @bind-Value="TransactionHistory.EndDate"
                              Name="EndDate"
                              DateFormat="MM/dd/yyyy"
                              Placeholder="Select end date"
                              AllowClear="true"
                              Min="@MinStartDate"
                              Style="width: 100%; display: block"/>
            <RadzenCompareValidator
                Value="TransactionHistory.StartDate"
                Operator="CompareOperator.GreaterThan"
                Component="EndDate"
                Visible="@(TransactionHistory.EndDate != null)"
                Style="position: absolute; margin-bottom: 1rem"
                Popup="true"
                Text="The End Date can't be before the start date."/>
        </div>

        <!-- Buttons -->
        <div style="display: flex; justify-content: space-between; margin-top: 2rem;">
            <RadzenButton ButtonStyle="ButtonStyle.Secondary" Text="Cancel" Click="@Cancel"/>
            <RadzenButton ButtonStyle="ButtonStyle.Primary" Text="@ButtonName" Type="submit" Style="margin-right: 1rem;"/>
        </div>
    </div>

</RadzenTemplateForm>

@code {

    [Parameter] public FinancialTransactionHistory TransactionHistory { get; set; } = new FinancialTransactionHistory();
    [Parameter] public DateTime MinStartDate { get; set; }
    [Parameter] public string ButtonName { get; set; } = "Add";

    protected override void OnParametersSet()
    {
        // _minStartDate = MinDate.ToDateTime(TimeOnly.MinValue);
    }

    void Submit()
    {
        if (TransactionHistory.Amount <= 0)
        {
            // Add error handling or validation messages here if needed
            return;
        }

        // Pass the transaction back to the parent
        DialogService.Close(TransactionHistory);
    }

    void Cancel()
    {
        // Close dialog without returning a value
        DialogService.Close(null);
    }

}