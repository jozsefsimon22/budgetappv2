@page "/DashboardV2"
@using System.Globalization
<h3>DashboardV2</h3>

<div style="display: flex; justify-content: space-between">
    <RadzenCard Variant="Variant.Filled" class="rz-my-12 rz-mx-auto" Style="max-width: 420px">
        <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Start" Gap="1rem" class="rz-p-4">
            <RadzenStack Gap="0">
                <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-2 rz-my-0">Employee</RadzenText>
                <RadzenText TextStyle="TextStyle.Body1">
                    <b>Test Data</b>
                </RadzenText>
                <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-4 rz-mb-0">Company</RadzenText>
                <RadzenText TextStyle="TextStyle.Body1">
                    <b>Test Data</b>
                </RadzenText>
            </RadzenStack>
        </RadzenStack>
    </RadzenCard>

    <RadzenCard Variant="Variant.Filled" class="rz-my-12 rz-mx-auto" Style="max-width: 420px">
        <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Start" Gap="1rem" class="rz-p-4">
            <RadzenStack Gap="0">
                <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-2 rz-my-0">Employee</RadzenText>
                <RadzenText TextStyle="TextStyle.Body1">
                    <b>Test Data</b>
                </RadzenText>
                <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-4 rz-mb-0">Company</RadzenText>
                <RadzenText TextStyle="TextStyle.Body1">
                    <b>Test Data</b>
                </RadzenText>
            </RadzenStack>
        </RadzenStack>
    </RadzenCard>

    <RadzenCard Variant="Variant.Filled" class="rz-my-12 rz-mx-auto" Style="max-width: 1350px">
        <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Start" Gap="1rem" class="rz-p-4">
            <RadzenStack Gap="0">
                <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-2 rz-my-0">Employee</RadzenText>
                <RadzenText TextStyle="TextStyle.Body1">
                    <b>Test Data</b>
                </RadzenText>
                <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-4 rz-mb-0">Company</RadzenText>
                <RadzenText TextStyle="TextStyle.Body1">
                    <b>Test Data</b>
                </RadzenText>
            </RadzenStack>
        </RadzenStack>
    </RadzenCard>
</div>

<div>
    <RadzenCard>
        <RadzenChart ColorScheme="ColorScheme.Palette">
            @for (var year = 2017; year <= 2024; year++)
            {
                var currentYearRevenue = revenue.Where(r => r.Year == year).ToList();
                <RadzenColumnSeries Data="@currentYearRevenue" CategoryProperty="Quarter" Title="@year.ToString()" ValueProperty="Revenue"/>
            }
            <RadzenColumnOptions Margin="0"/>
            <RadzenValueAxis Formatter="@FormatAsUSD"/>
        </RadzenChart>
    </RadzenCard>
</div>

@code {

    class DataItem
    {
        public int Year { get; set; }
        public string Quarter { get; set; }
        public double Revenue { get; set; }
    }

    string FormatAsUSD(object value)
    {
        return ((double)value).ToString("C0", CultureInfo.CreateSpecificCulture("en-US"));
    }

    IList<DataItem> revenue = new List<DataItem>();

    protected override void OnInitialized()
    {
        var random = new Random();

        for (var year = 2017; year <= 2024; year++)
        {
            for (var quarter = 1; quarter <= 4; quarter++)
            {
                revenue.Add(new DataItem
                {
                    Year = year,
                    Quarter = $"Q{quarter}",
                    Revenue = random.NextDouble() * 200000
                });
            }
        }
    }

}